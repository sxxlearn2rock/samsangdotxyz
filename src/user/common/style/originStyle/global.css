/* originStyle文件夹中的文件都是纯css样式，在组件中的style标签中被@import时，
会被复制到被@import的地方，所以如果是全局样式，在app.vue中引用一次即可
而其他如mixin.css并非css样式，而是posscss的增强语法，它们会被postcss的插件处理，
所以它们在被需要时须用@import引入 */
/* user端全局公用的样式 */
@import './normalize.css';
/* @import './variable.css'; */
@import '../mixin.css';

:global {
  html, body {
    width: 100%;
    height: 100%;
  }
  body {
    fs: $font-size-base;
    c: $color-gray-base;
    font-family: 'Helvetica', 'Hiragino Sans GB', 'Microsoft Yahei', '微软雅黑', 'Arial', 'sans-serif';
  }
  
  div {
    box-sizing:border-box;
    -moz-box-sizing:border-box; 
    -webkit-box-sizing:border-box; 
  }
  
  .ellipsis {
    /* white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; */
    overflow : hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    word-break: break-all;
  }

  .box-border {
    box-sizing:border-box;
    -moz-box-sizing:border-box; 
    -webkit-box-sizing:border-box; 
  }


  a {
    text-decoration: none;
    c: $color-gray-base;
    cursor: pointer;
  }

  a.link {
    c: $color-primary;
    &:hover {
      c: color($color-primary tint(15%));
    }
    &:active {
      c: color($color-primary shade(5%));
    }
  }

  /* menu-item */
  .menu-item{
    fs: $font-size-h5;
    cursor: pointer;
    padding: 0 15px;
    &:hover>a{
      c: $color-gray-light;
    }
    &.active>a{
      font-size: $font-size-big;
      c: $color-primary;
    } 
  }

  /* icon */
  .icon {
    cursor: pointer;
    &.icon-with-tips {
      position: relative;
    }
    &>.tips {
      $tips-size: 16px;
      position: absolute;
      top: -3px;
      right: -3px;
      d: inline-block;
      w: $tips-size;
      h: $tips-size;
      line-height: $tips-size;
      fs: 12px;
      text-align: center;
      bg: $color-gray-lighter;
      c: #fff;
      border-radius: calc($tips-size / 2);
    }
  }
  @each $st in $size-type {
    @mixin icon $st;
  }
  @mixin icon-gray primary;
  @mixin icon-gray success;
  @mixin icon-gray info;
  @mixin icon-gray warning;
  @mixin icon-gray error;
  @mixin icon-gray tips;

  /* tag */
  .tag {
    d: inline-block;
    padding: 0 6px;
    c: $label-color;
    text-align: center;
    white-space: nowrap;
    vertical-align: baseline;
    border-radius: $border-radius-small;
    cursor: pointer;
    max-width: 150px;
    @mixin ellipsis;
  }
  @mixin tag-variant primary;
  @mixin tag-variant success;
  @mixin tag-variant info;
  @mixin tag-variant warning;
  @mixin tag-variant error;
  @mixin tag-variant tips;

  /* btn-group */
  .btn-group {
    @mixin box-border;
    d: flex;
    align-items: center;
    /* border-radius: $border-radius-base; */
    &>.btn-item {
      cursor: pointer;
      padding: 3px 8px;
      border: 1px solid $color-gray-light;
      border-right: none;
      /* border-radius-left-top: $border-radius-base; */
      c: $color-gray-light;
      &:first-child {
        border-top-left-radius: $border-radius-base;
        border-bottom-left-radius: $border-radius-base;
      }
      &:last-child {
        border-right: 1px solid $color-gray-light;
        border-top-right-radius: $border-radius-base;
        border-bottom-right-radius: $border-radius-base;
      }
      @mixin btn-item-variant primary;
      @mixin btn-item-variant success;
      @mixin btn-item-variant info;
      @mixin btn-item-variant warning;
      @mixin btn-item-variant error;
      @mixin btn-item-variant tips;
    }
  }

  /* icons */
  @mixin icon-variant primary;
  @mixin icon-variant success;
  @mixin icon-variant info;
  @mixin icon-variant warning;
  @mixin icon-variant error;
  @mixin icon-variant tips;

  /* vue */
  @mixin vue-transition-fade;
}

